{"ast":null,"code":"import { createStore } from \"redux\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\n\nconst reducer = (state = initialState, actions) => {\n  if (actions.type === \"ADD\") {\n    if (actions.payload) {\n      return { ...state,\n        counter: state.counter + actions.payload\n      };\n    }\n\n    return { ...state,\n      counter: state.counter + 1\n    };\n  } else if (actions.type === \"REMOVE\") {\n    return { ...state,\n      counter: state.counter - 1\n    };\n  }\n\n  if (actions.type === \"TOGGLE\") {\n    return { ...state,\n      showCounter: !state.showCounter\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(reducer);\nexport default store;","map":{"version":3,"sources":["F:/jsExercises/redux-project/src/store/store.js"],"names":["createStore","initialState","counter","showCounter","reducer","state","actions","type","payload","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,CADU;AAEnBC,EAAAA,WAAW,EAAE;AAFM,CAArB;;AAIA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,OAAvB,KAAmC;AACjD,MAAIA,OAAO,CAACC,IAAR,KAAiB,KAArB,EAA4B;AAC1B,QAAID,OAAO,CAACE,OAAZ,EAAqB;AACnB,aAAO,EACL,GAAGH,KADE;AAELH,QAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgBI,OAAO,CAACE;AAF5B,OAAP;AAID;;AACD,WAAO,EACL,GAAGH,KADE;AAELH,MAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgB;AAFpB,KAAP;AAID,GAXD,MAWO,IAAII,OAAO,CAACC,IAAR,KAAiB,QAArB,EAA+B;AACpC,WAAO,EACL,GAAGF,KADE;AAELH,MAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgB;AAFpB,KAAP;AAID;;AACD,MAAII,OAAO,CAACC,IAAR,KAAiB,QAArB,EAA+B;AAC7B,WAAO,EACL,GAAGF,KADE;AAELF,MAAAA,WAAW,EAAE,CAACE,KAAK,CAACF;AAFf,KAAP;AAID;;AACD,SAAOE,KAAP;AACD,CAzBD;;AA0BA,MAAMI,KAAK,GAAGT,WAAW,CAACI,OAAD,CAAzB;AAEA,eAAeK,KAAf","sourcesContent":["import { createStore } from \"redux\";\r\n\r\nconst initialState = {\r\n  counter: 0,\r\n  showCounter: true,\r\n};\r\nconst reducer = (state = initialState, actions) => {\r\n  if (actions.type === \"ADD\") {\r\n    if (actions.payload) {\r\n      return {\r\n        ...state,\r\n        counter: state.counter + actions.payload,\r\n      };\r\n    }\r\n    return {\r\n      ...state,\r\n      counter: state.counter + 1,\r\n    };\r\n  } else if (actions.type === \"REMOVE\") {\r\n    return {\r\n      ...state,\r\n      counter: state.counter - 1,\r\n    };\r\n  }\r\n  if (actions.type === \"TOGGLE\") {\r\n    return {\r\n      ...state,\r\n      showCounter: !state.showCounter,\r\n    };\r\n  }\r\n  return state;\r\n};\r\nconst store = createStore(reducer);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}