{"ast":null,"code":"import { createStore } from \"redux\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\ncreateSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state, action) {\n      state.counter--;\n    },\n\n    increaseCounter(state) {}\n\n  }\n});\n\nconst reducer = (state = initialState, actions) => {\n  if (actions.type === \"ADD\") {\n    if (actions.payload) {\n      return { ...state,\n        counter: state.counter + actions.payload\n      };\n    }\n\n    return { ...state,\n      counter: state.counter + 1\n    };\n  } else if (actions.type === \"REMOVE\") {\n    return { ...state,\n      counter: state.counter - 1\n    };\n  }\n\n  if (actions.type === \"TOGGLE\") {\n    return { ...state,\n      showCounter: !state.showCounter\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(reducer);\nexport default store;","map":{"version":3,"sources":["F:/jsExercises/redux-project/src/store/store.js"],"names":["createStore","createSlice","initialState","counter","showCounter","name","reducers","increment","state","decrement","action","increaseCounter","reducer","actions","type","payload","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,CADU;AAEnBC,EAAAA,WAAW,EAAE;AAFM,CAArB;AAIAH,WAAW,CAAC;AACVI,EAAAA,IAAI,EAAE,SADI;AAEVH,EAAAA,YAFU;AAGVI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACL,OAAN;AACD,KAHO;;AAIRM,IAAAA,SAAS,CAACD,KAAD,EAAQE,MAAR,EAAgB;AACvBF,MAAAA,KAAK,CAACL,OAAN;AACD,KANO;;AAQRQ,IAAAA,eAAe,CAACH,KAAD,EAAQ,CAAE;;AARjB;AAHA,CAAD,CAAX;;AAcA,MAAMI,OAAO,GAAG,CAACJ,KAAK,GAAGN,YAAT,EAAuBW,OAAvB,KAAmC;AACjD,MAAIA,OAAO,CAACC,IAAR,KAAiB,KAArB,EAA4B;AAC1B,QAAID,OAAO,CAACE,OAAZ,EAAqB;AACnB,aAAO,EACL,GAAGP,KADE;AAELL,QAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgBU,OAAO,CAACE;AAF5B,OAAP;AAID;;AACD,WAAO,EACL,GAAGP,KADE;AAELL,MAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgB;AAFpB,KAAP;AAID,GAXD,MAWO,IAAIU,OAAO,CAACC,IAAR,KAAiB,QAArB,EAA+B;AACpC,WAAO,EACL,GAAGN,KADE;AAELL,MAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgB;AAFpB,KAAP;AAID;;AACD,MAAIU,OAAO,CAACC,IAAR,KAAiB,QAArB,EAA+B;AAC7B,WAAO,EACL,GAAGN,KADE;AAELJ,MAAAA,WAAW,EAAE,CAACI,KAAK,CAACJ;AAFf,KAAP;AAID;;AACD,SAAOI,KAAP;AACD,CAzBD;;AA0BA,MAAMQ,KAAK,GAAGhB,WAAW,CAACY,OAAD,CAAzB;AAEA,eAAeI,KAAf","sourcesContent":["import { createStore } from \"redux\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\nconst initialState = {\r\n  counter: 0,\r\n  showCounter: true,\r\n};\r\ncreateSlice({\r\n  name: \"counter\",\r\n  initialState,\r\n  reducers: {\r\n    increment(state) {\r\n      state.counter++;\r\n    },\r\n    decrement(state, action) {\r\n      state.counter--;\r\n    },\r\n\r\n    increaseCounter(state) {},\r\n  },\r\n});\r\nconst reducer = (state = initialState, actions) => {\r\n  if (actions.type === \"ADD\") {\r\n    if (actions.payload) {\r\n      return {\r\n        ...state,\r\n        counter: state.counter + actions.payload,\r\n      };\r\n    }\r\n    return {\r\n      ...state,\r\n      counter: state.counter + 1,\r\n    };\r\n  } else if (actions.type === \"REMOVE\") {\r\n    return {\r\n      ...state,\r\n      counter: state.counter - 1,\r\n    };\r\n  }\r\n  if (actions.type === \"TOGGLE\") {\r\n    return {\r\n      ...state,\r\n      showCounter: !state.showCounter,\r\n    };\r\n  }\r\n  return state;\r\n};\r\nconst store = createStore(reducer);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}