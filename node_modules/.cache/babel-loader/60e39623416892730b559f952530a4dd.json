{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increment(state, action) {\n      if (action.payload) {\n        state.counter = state.counter + action.payload;\n      } else {\n        state.counter++;\n      }\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nconst auth = createSlice({\n  name: \"auth\"\n});\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"sources":["F:/jsExercises/redux-project/src/store/store.js"],"names":["createSlice","configureStore","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","action","payload","decrement","toggleCounter","auth","store","reducer","counterActions","actions"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,CADU;AAEnBC,EAAAA,WAAW,EAAE;AAFM,CAArB;AAIA,MAAMC,YAAY,GAAGL,WAAW,CAAC;AAC/BM,EAAAA,IAAI,EAAE,SADyB;AAE/BJ,EAAAA,YAF+B;AAG/BK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACvB,UAAIA,MAAM,CAACC,OAAX,EAAoB;AAClBF,QAAAA,KAAK,CAACN,OAAN,GAAgBM,KAAK,CAACN,OAAN,GAAgBO,MAAM,CAACC,OAAvC;AACD,OAFD,MAEO;AACLF,QAAAA,KAAK,CAACN,OAAN;AACD;AACF,KAPO;;AAQRS,IAAAA,SAAS,CAACH,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACN,OAAN;AACD,KAVO;;AAYRU,IAAAA,aAAa,CAACJ,KAAD,EAAQ;AACnBA,MAAAA,KAAK,CAACL,WAAN,GAAoB,CAACK,KAAK,CAACL,WAA3B;AACD;;AAdO;AAHqB,CAAD,CAAhC;AAoBA,MAAMU,IAAI,GAAGd,WAAW,CAAC;AACvBM,EAAAA,IAAI,EAAE;AADiB,CAAD,CAAxB;AAGA,MAAMS,KAAK,GAAGd,cAAc,CAAC;AAC3Be,EAAAA,OAAO,EAAEX,YAAY,CAACW;AADK,CAAD,CAA5B;AAIA,OAAO,MAAMC,cAAc,GAAGZ,YAAY,CAACa,OAApC;AAEP,eAAeH,KAAf","sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\nconst initialState = {\r\n  counter: 0,\r\n  showCounter: true,\r\n};\r\nconst counterSlice = createSlice({\r\n  name: \"counter\",\r\n  initialState,\r\n  reducers: {\r\n    increment(state, action) {\r\n      if (action.payload) {\r\n        state.counter = state.counter + action.payload;\r\n      } else {\r\n        state.counter++;\r\n      }\r\n    },\r\n    decrement(state) {\r\n      state.counter--;\r\n    },\r\n\r\n    toggleCounter(state) {\r\n      state.showCounter = !state.showCounter;\r\n    },\r\n  },\r\n});\r\nconst auth = createSlice({\r\n  name: \"auth\",\r\n});\r\nconst store = configureStore({\r\n  reducer: counterSlice.reducer,\r\n});\r\n\r\nexport const counterActions = counterSlice.actions;\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}